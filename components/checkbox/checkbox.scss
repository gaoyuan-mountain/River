@import '../core/theming/_theming';
@import '../core/style/_elevation';
@import '../core/style/_variables';


// The width/height of the checkbox element.
$rv-checkbox-size: $rv-toggle-size !default;
// The width of the line used to draw the checkmark / mixedmark.
$rv-checkbox-mark-stroke-size: 2/15 * $rv-checkbox-size !default;
// The width of the checkbox border shown when the checkbox is unchecked.
$rv-checkbox-border-width: 2px;
// The base duration used for the majority of transitions for the checkbox.
$rv-checkbox-transition-duration: 90ms;
// The amount of spacing between the checkbox and its label.
$rv-checkbox-item-spacing: $rv-toggle-padding;

// Manual calculation done on SVG
$_rv-checkbox-mark-path-length: 22.910259;
$_rv-checkbox-indeterminate-checked-easing-function: cubic-bezier(0.14, 0, 0, 1);


// Fades in the background of the checkbox when it goes from unchecked -> {checked,indeterminate}.
@keyframes rv-checkbox-fade-in-background {
  0% {
    opacity: 0;
  }

  50% {
    opacity: 1;
  }
}

// Fades out the background of the checkbox when it goes from {checked,indeterminate} -> unchecked.
@keyframes rv-checkbox-fade-out-background {
  0%, 50% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

// "Draws" in the checkmark when the checkbox goes from unchecked -> checked.
@keyframes rv-checkbox-unchecked-checked-checkmark-path {
  0%, 50% {
    stroke-dashoffset: $_rv-checkbox-mark-path-length;
  }

  50% {
    animation-timing-function: $rv-linear-out-slow-in-timing-function;
  }

  100% {
    stroke-dashoffset: 0;
  }
}

// Horizontally expands the mixedmark when the checkbox goes from unchecked -> indeterminate.
@keyframes rv-checkbox-unchecked-indeterminate-mixedmark {
  0%, 68.2% {
    transform: scaleX(0);
  }

  68.2% {
    animation-timing-function: cubic-bezier(0, 0, 0, 1);
  }

  100% {
    transform: scaleX(1);
  }
}

// "Erases" the checkmark when the checkbox goes from checked -> unchecked.
@keyframes rv-checkbox-checked-unchecked-checkmark-path {
  from {
    animation-timing-function: $rv-fast-out-linear-in-timing-function;
    stroke-dashoffset: 0;
  }

  to {
    stroke-dashoffset: $_rv-checkbox-mark-path-length * -1;
  }
}


// Rotates and fades out the checkmark when the checkbox goes from checked -> indeterminate. This
// animation helps provide the illusion of the checkmark "morphing" into the mixedmark.
@keyframes rv-checkbox-checked-indeterminate-checkmark {
  from {
    animation-timing-function: $rv-linear-out-slow-in-timing-function;
    opacity: 1;
    transform: rotate(0deg);
  }

  to {
    opacity: 0;
    transform: rotate(45deg);
  }
}

// Rotates and fades the checkmark back into position when the checkbox goes from indeterminate ->
// checked. This animation helps provide the illusion that the mixedmark is "morphing" into the
// checkmark.
@keyframes rv-checkbox-indeterminate-checked-checkmark {
  from {
    animation-timing-function: $_rv-checkbox-indeterminate-checked-easing-function;
    opacity: 0;
    transform: rotate(45deg);
  }

  to {
    opacity: 1;
    transform: rotate(360deg);
  }
}

// Rotates and fades in the mixedmark when the checkbox goes from checked -> indeterminate. This
// animation, similar to rv-checkbox-checked-indeterminate-checkmark, helps provide an illusion
// of "morphing" from checkmark -> mixedmark.
@keyframes rv-checkbox-checked-indeterminate-mixedmark {
  from {
    animation-timing-function: $rv-linear-out-slow-in-timing-function;
    opacity: 0;
    transform: rotate(-45deg);
  }

  to {
    opacity: 1;
    transform: rotate(0deg);
  }
}

// Rotates and fades out the mixedmark when the checkbox goes from indeterminate -> checked. This
// animation, similar to rv-checkbox-indeterminate-checked-checkmark, helps provide an illusion
// of "morphing" from mixedmark -> checkmark.
@keyframes rv-checkbox-indeterminate-checked-mixedmark {
  from {
    animation-timing-function: $_rv-checkbox-indeterminate-checked-easing-function;
    opacity: 1;
    transform: rotate(0deg);
  }

  to {
    opacity: 0;
    transform: rotate(315deg);
  }
}


// Horizontally collapses and fades out the mixedmark when the checkbox goes from indeterminate ->
// unchecked.
@keyframes rv-checkbox-indeterminate-unchecked-mixedmark {
  0% {
    animation-timing-function: linear;
    opacity: 1;
    transform: scaleX(1);
  }

  32.8%, 100% {
    opacity: 0;
    transform: scaleX(0);
  }
}

// Applied to elements that cover the checkbox's entire inner container.
%rv-checkbox-cover-element {
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

// Applied to elements that are considered "marks" within the checkbox, e.g. the checkmark and
// the mixedmark.
%rv-checkbox-mark {
  $width-padding-inset: 2 * $rv-checkbox-border-width;
  width: calc(100% - #{$width-padding-inset});
}

// Applied to elements that appear to make up the outer box of the checkmark, such as the frame
// that contains the border and the actual background element that contains the marks.
%rv-checkbox-outer-box {
  @extend %rv-checkbox-cover-element;
  border-radius: 2px;
  box-sizing: border-box;
  pointer-events: none;
}

rv-checkbox {
  cursor: pointer;

  // Animation
  transition: background $swift-ease-out-duration $swift-ease-out-timing-function,
              rv-elevation-transition-property-value();
}

.rv-checkbox-layout {
  // `cursor: inherit` ensures that the wrapper element gets the same cursor as the rv-checkbox
  // (e.g. pointer by default, regular when disabled), instead of the browser default.
  cursor: inherit;
  align-items: baseline;
  display: inline-flex;
}

.rv-checkbox-inner-container {
  display: inline-block;
  height: $rv-checkbox-size;
  line-height: 0;
  margin: auto;
  margin-right: $rv-checkbox-item-spacing;
  order: 0;
  position: relative;
  vertical-align: middle;
  white-space: nowrap;
  width: $rv-checkbox-size;

  [dir='rtl'] & {
    margin: {
      left: $rv-checkbox-item-spacing;
      right: auto;
    }
  }
}

// TODO(kara): Remove this style when fixing vertical baseline
.rv-checkbox-layout .rv-checkbox-label {
  line-height: 24px;
}

.rv-checkbox-frame {
  @extend %rv-checkbox-outer-box;

  background-color: transparent;
  border: $rv-checkbox-border-width solid;
  transition: border-color $rv-checkbox-transition-duration $rv-linear-out-slow-in-timing-function;
  will-change: border-color;
}

.rv-checkbox-background {
  @extend %rv-checkbox-outer-box;

  align-items: center;
  display: inline-flex;
  justify-content: center;
  transition: background-color $rv-checkbox-transition-duration
                  $rv-linear-out-slow-in-timing-function,
              opacity $rv-checkbox-transition-duration $rv-linear-out-slow-in-timing-function;
  will-change: background-color, opacity;
}

.rv-checkbox-checkmark {
  @extend %rv-checkbox-cover-element;
  @extend %rv-checkbox-mark;

  width: 100%;
}

.rv-checkbox-checkmark-path {
  stroke: {
    dashoffset: $_rv-checkbox-mark-path-length;
    dasharray: $_rv-checkbox-mark-path-length;
    width: $rv-checkbox-mark-stroke-size;
  }
}

.rv-checkbox-mixedmark {
  @extend %rv-checkbox-mark;

  height: floor($rv-checkbox-mark-stroke-size);
  opacity: 0;
  transform: scaleX(0) rotate(0deg);
}

.rv-checkbox-align-end {
  .rv-checkbox-inner-container {
    order: 1;
    margin: {
      left: $rv-checkbox-item-spacing;
      right: auto;
    }

    [dir='rtl'] & {
      margin: {
        left: auto;
        right: $rv-checkbox-item-spacing;
      }
    }
  }
}

.rv-checkbox-checked {
  .rv-checkbox-checkmark {
    opacity: 1;
  }

  .rv-checkbox-checkmark-path {
    stroke-dashoffset: 0;
  }

  .rv-checkbox-mixedmark {
    transform: scaleX(1) rotate(-45deg);
  }
}

.rv-checkbox-indeterminate {
  .rv-checkbox-checkmark {
    opacity: 0;
    transform: rotate(45deg);
  }

  .rv-checkbox-checkmark-path {
    stroke-dashoffset: 0;
  }

  .rv-checkbox-mixedmark {
    opacity: 1;
    transform: scaleX(1) rotate(0deg);
  }
}


.rv-checkbox-unchecked {
  .rv-checkbox-background {
    background-color: transparent;
  }
}

.rv-checkbox-disabled {
  cursor: default;
}

.rv-checkbox-anim {
  $indeterminate-change-duration: 500ms;

  &-unchecked-checked {
    .rv-checkbox-background {
      animation: $rv-checkbox-transition-duration * 2 linear 0ms rv-checkbox-fade-in-background;
    }

    .rv-checkbox-checkmark-path {
      // Instead of delaying the animation, we simply multiply its length by 2 and begin the
      // animation at 50% in order to prevent a flash of styles applied to a checked checkmark
      // as the background is fading in before the animation begins.
      animation:
        $rv-checkbox-transition-duration * 2 linear 0ms rv-checkbox-unchecked-checked-checkmark-path;
    }
  }

  &-unchecked-indeterminate {
    .rv-checkbox-background {
      animation: $rv-checkbox-transition-duration * 2 linear 0ms rv-checkbox-fade-in-background;
    }

    .rv-checkbox-mixedmark {
      animation:
        $rv-checkbox-transition-duration linear 0ms rv-checkbox-unchecked-indeterminate-mixedmark;
    }
  }

  &-checked-unchecked {
    .rv-checkbox-background {
      animation: $rv-checkbox-transition-duration * 2 linear 0ms rv-checkbox-fade-out-background;
    }

    .rv-checkbox-checkmark-path {
      animation:
        $rv-checkbox-transition-duration linear 0ms rv-checkbox-checked-unchecked-checkmark-path;
    }
  }

  &-checked-indeterminate {
    .rv-checkbox-checkmark {
      animation:
        $rv-checkbox-transition-duration linear 0ms rv-checkbox-checked-indeterminate-checkmark;
    }

    .rv-checkbox-mixedmark {
      animation:
        $rv-checkbox-transition-duration linear 0ms rv-checkbox-checked-indeterminate-mixedmark;
    }
  }

  &-indeterminate-checked {
    .rv-checkbox-checkmark {
      animation:
        $indeterminate-change-duration linear 0ms rv-checkbox-indeterminate-checked-checkmark;
    }

    .rv-checkbox-mixedmark {
      animation:
        $indeterminate-change-duration linear 0ms rv-checkbox-indeterminate-checked-mixedmark;
    }
  }

  &-indeterminate-unchecked {
    .rv-checkbox-background {
      animation: $rv-checkbox-transition-duration * 2 linear 0ms rv-checkbox-fade-out-background;
    }

    .rv-checkbox-mixedmark {
      animation:
        $indeterminate-change-duration * 0.6 linear 0ms
        rv-checkbox-indeterminate-unchecked-mixedmark;
    }
  }
}

.rv-checkbox-input {
  // Move the input to the bottom and in the middle.
  // Visual improvement to properly show browser popups when being required.
  bottom: 0;
  left: 50%;
}
